<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Crackers ðŸ’¥</title><link>https://visualcrackers.github.io/showcase/</link><description>Recent content on Visual Crackers ðŸ’¥</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><atom:link href="https://visualcrackers.github.io/showcase/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Color-Blender/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Color-Blender/</guid><description>Color Blender # One basic rendering application is the mix of colors. Blending colors refers to the process of combining two or more colors to create a new one. The principal theory behind this sketch is manipulate the color components RGB of both colors and determining in which way they will interact.
This idea is applied in areas as Image Editing, Lighting and Shading, Color Interpolation and Color Correction. There are several operations that allow to obtain different results, such as addition, multiplication, substraction, overlay, screen, darken, lighten and so more.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/2D-Solar-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/2D-Solar-System/</guid><description>2D Solar System # One way we can easily understand how these transformations work is by recreating a basic 2D solar system. In this model, we can see how objects move in relating to others by observing how the planets rotate around the sun, and how the moon rotates around the earth.
How does it work? # First of all, we define the class Planet, which will be used to create the planets and the sun (we know it is not a planet, but for this example it works).</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/Palette/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/Palette/</guid><description>Palette Generator # When creating any type of software, design, or tool, it is important to consider that not all users have the same perception capacity. The colors are variables that really affect the interaction of consumers with the product, so making a selection of the appropriate palette is a task that must be properly contemplated, and even more so when trying to make the product accessible to everyone.</description></item><item><title>Intro &amp; Background</title><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Intro-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Intro-background/</guid><description>Intro &amp;amp; Background # Shaders # Short programs that render graphics data.
Shaders? What is a shader? # A shader is a program that takes advantage of parallelization running on a computer&amp;rsquo;s GPU (Graphics Processing Unit), it is specifically designed to handle complex calculations involved in rendering, appling the appropiate levels of light, darkness or color in 2D or 3D models.
They are usually small and simple programs, but you should be carefull because the instructions are executed all at once for every single pixel on the screen (Keep reading for more info).</description></item><item><title>Intro &amp; Background</title><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Intro-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Intro-background/</guid><description>Intro &amp;amp; Background # Transformations in Space # In the field of Visual Computing, transformations play a key role in creating and manipulating images and objects in 2D and 3D environments. These operations allow us to alter the position, orientation, scale, and lighting of visual elements, providing a wide range of creative possibilities.
2D and 3D Space # Before delving into transformations, it&amp;rsquo;s important to understand the spaces we work in.</description></item><item><title>Intro &amp; Background</title><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Intro-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Intro-background/</guid><description>Intro &amp;amp; Background # Visual Illusions # Visual illusions are phenomena that make us perceive something that is not present or that distorts our perception of reality. These illusions are produced by the complex interaction between our visual system and our brain.
The brain receives information through the eyes and processes it to create a coherent image of the world around us. However, this process is not always perfect and can be fooled by various visual illusions that make us perceive things differently than they really are.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Glitch-Board/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Glitch-Board/</guid><description>Board with Glitch Effect # This sketch is an easy but interesting application of shaders. It is based on the decomposition of colors, showing the strokes made, but adding a glitch effect that separate the Red, Green and Blue colors that make up the white light.
Glitch art is a digital art form that embraces and celebrates imperfections, errors, and technical malfunctions as a creative aesthetic. It involves intentionally distorting or manipulating technology to produce unexpected visual or auditory effects.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/3D-Solar-System/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/3D-Solar-System/</guid><description>3D Solar System # Now that we have seen how the transformations work in 2D, we can apply them to a 3D model. In addition to that, we will add a bit more of interactivity to the model, so that we can move around the solar system and see it from different perspectives.
A 3D model involves way more transformations than a 2D one, some of which may be really unintuitive, so we will have to be careful with the order in which we apply them.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/Texture-Lighting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Code-Results/Texture-Lighting/</guid><description>Texture and Lighting # Once we have the 3D models of the solar system, we can further enhance the level of detail for specific models, such as the one with the Earth seen from space, or one with Jupiter and its Galilean moons. To make the models more realistic, we employ techniques such as lighting and textures. Lighting plays a crucial role in creating a lifelike appearance. By simulating different light sources, shadows, and reflections, we can bring depth and realism to the scene.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/ColorTracker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/ColorTracker/</guid><description>Color tracker # The reduced ability to distinguish between certain colors due to a genetic defect such as color blindness, makes color an important variable when making any design; that is why it is important to try to reduce the inconveniences that this can cause. Additionally, this different or null perception of colors is not only a condition like things are seen, but it also affects the ability to get information from the environment.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Mosaic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Mosaic/</guid><description>PhotoMosaic # This program utilizes the power of shaders to create captivating photomosaic effects. By analyzing the luminance of each pixel in an original image, the program intelligently selects smaller images from a palette to replace the pixels, resulting in a visually stunning composition of smaller images that form the larger picture.
Each tile is replaced with a carefully chosen image from a collection of smaller images, creating a mosaic-like representation of the original.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Conclusions-Future-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Conclusions-Future-work/</guid><description>Conclusions # Expanding the Applications of Shaders beyond 3D Graphics # While shaders are commonly associated with 3D graphics, their applications are not limited to this domain. Shaders can also be used in 2D graphics to achieve interesting and visually appealing effects. For example, in 2D games or image processing applications, shaders can be employed for tasks such as color blending or creating photo mosaics.
Enhancing Visual Realism through Shaders # Shaders have proven to be a powerful tool for enhancing the visual quality and realism of computer-generated images.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Conclusions-Future-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Transformations/Conclusions-Future-work/</guid><description>Conclusions # The Power of 3D Models in Visual Computing: # 3D models serve as the backbone of visual computing, offering a versatile and powerful means of representing complex objects and environments. By working with 3D models, we experienced firsthand the immense potential they hold for various applications in fields such as gaming, simulation, virtual reality, and architectural visualization. 3D models provide a rich and detailed representation of objects, allowing for accurate spatial relationships, intricate surface details, and realistic simulations of light and materials.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/ReColoring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/ReColoring/</guid><description>Re-Coloring # The possibility of changing the colors of a figure is one of the most interesting features of computer graphics, since it allows image transformations to be carried out in a simple and fast way. In this case, the p5.js library has been used to transform the colors of an image based on the change in the palette you are using.
Through the use of different color palettes, effects can be obtained in the image that can be implemented to help people with color blindness.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Conclusions-Future-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Conclusions-Future-work/</guid><description>Conclusions # Conclusions # Image processing technology has revolutionized the way we view and interact with digital media. Libraries such as p5.js provide developers with powerful tools to manipulate images and graphics, allowing for creative and interactive applications. One area where image processing technology can make a significant impact is in improving accessibility for people with visual impairments or color blindness.
Recoloring an image is a useful tool for improving image accessibility, as it can help users distinguish between different elements in an image.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Smart-Mosaic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Code-Results/Smart-Mosaic/</guid><description>Smart PhotoMosaic # This program is a super powered version of the previous PhotoMosaic. It will let you appreciate the best things of each painting and with that, give a better visual result about the expected image.
The p5.js code provides the interactive interface and handles the image processing pipeline, but behind the scenes, the GLSL fragment shader does the heavy lifting.
How does it works? # The fragment shader takes the original image and the palette of smaller images as inputs.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/Histogram/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Visual-Ilusions/Code-Results/Histogram/</guid><description>Color Histogram # Color histograms can also be employed as a potential application for individuals with color blindness, specifically for distinguishing and interpreting colors that might pose challenges to them. By utilizing color histograms, the following benefits can be realized:
Color Differentiation: Color histograms can help individuals with color blindness differentiate between different colors by analyzing the distribution of color values. Even if they cannot perceive specific colors accurately, they can still observe variations in color frequencies and patterns.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/About/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/About/</guid><description>About # Hello there! This is our team ðŸ˜ŽðŸ˜ŽðŸ˜Ž. We&amp;rsquo;re a group of Computer Science students from the Universidad Nacional de Colombia. We&amp;rsquo;re currently working on a project for the course of Visual Computing.
Integrants # IvÃ¡n Yared Lombana Fourth year systems engineering student with interest in backend development and cybersecurity. I have an interest in artificial intelligence and a great passion for mathematics. Rocket League player attempt and altruist at heart.</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/Video/Video/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/Video/Video/</guid><description>FINAL VIDEO # Video explanation of final work: https://youtu.be/yMq70Rw0Xbc</description></item></channel></rss>