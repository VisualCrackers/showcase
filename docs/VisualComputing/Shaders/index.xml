<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Crackers ðŸ’¥</title><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/</link><description>Recent content on Visual Crackers ðŸ’¥</description><generator>Hugo -- gohugo.io</generator><language>es-es</language><atom:link href="https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title>Intro &amp; Background</title><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Intro-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Intro-background/</guid><description>Intro &amp;amp; Background # Shaders # Short programs that render graphics data.
Shaders? What is a shader? # A shader is a program that takes advantage of parallelization running on a computer&amp;rsquo;s GPU (Graphics Processing Unit), it is specifically designed to handle complex calculations involved in rendering, appling the appropiate levels of light, darkness or color in 2D or 3D models.
They are usually small and simple programs, but you should be carefull because the instructions are executed all at once for every single pixel on the screen (Keep reading for more info).</description></item><item><title/><link>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Conclusions-Future-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcrackers.github.io/showcase/docs/VisualComputing/Shaders/Conclusions-Future-work/</guid><description> Conclusions # Conclusions #</description></item></channel></rss>